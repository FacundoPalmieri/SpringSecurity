spring.messages.encoding=UTF-8

#UserService
userService.save.passwordNotEquals.user = Las password deber coincidir.
userService.save.passwordNotEquals.log = No coinciden las password - [UsuarioCreador: {0}] - [UsuarioNuevo: {0}].
userService.save.ok = Usuario creado correctamente.
userService.requestResetPassword.success =Solicitud de restablecimiento de contrase\u00F1a procesada. Por favor, revisa tu correo electr\u00F3nico.
userService.resetPassword.success = Se ha restablecido la contrase\u00F1a exitosamente.
userService.resetPassword.asunto = Restablecimiento de Contrase\u00F1a
userService.resetPassword.error = Token de restablecimiento de contrase\u00F1a no v\u00E1lido o expirado.
userService.dominio = https://tu-dominio.com/reset-password
userService.requestResetPassword.mensaje = Para restablecer tu contrase\u00F1a, haz clic en el siguiente enlace: {0} \n\n IMPORTANTE! \n\n - SI USTED NO SOLICIT\u00D3 RESTABLECERLA, COMUNIQUESE CON EL \u00C1REA DE SOPORTE DE MANERA INMEDIATA - .
userService.requestResetPassword.asunto = Solicitud de Restablecimiento de Contrase\u00F1a.



#GlobalException
exception.database.log = Error al acceder a la base de datos: [ENTIDAD: {0}] - [ID OBJETO {1}] -  [NOMBRE OBJETO:{2}] - [OPERACI\u00D3N:{3}] -  [CAUSA RA\u00CDZ: {4}] - [MENSAJE USUARIO: {5}]
exception.database.user = Ocurri\u00F3 un error al procesar la solicitud en la base de datos. Por favor, intente nuevamente m\u00E1s tarde.
exception.validation.log = Validaci\u00F3n error [Campo: {0}] - [Mensaje: {1}] - [Usuario: - {2}].
exception.generic=Ha ocurrido un error inesperado. Por favor, int\u00E9ntalo de nuevo m\u00E1s tarde.
exception.notFound = La URL que has solicitado no existe. Por favor verifica y volv\u00E9 a intentarlo.
exception.authenticationRequired.log = Usuario no autenticado [Usuario : {0}] - [URL: {1}] - [Mensaje: {2}].
exception.authenticationRequired.user = Debes autenticarte primero antes de ingresar a esta p\u00E1gina.
exception.accessDenied.log=No tiene permiso para acceder a este recurso [Usuario : {0}] - [URL: {1}] - [Mensaje: {2}].
exception.accessDenied.user=No tienes permiso para acceder a este recurso.
exception.validateToken.log = Token inv\u00E1lido para el usuario [{0}] - [IP:{1}].
exception.validateToken.user = Token inv\u00E1lido.
exception.expiredToken.log = Token expirado [USUARIO: {0}] - [IP:{1}].
exception.expiredToken.user = Token expirado.
exception.badCredentials.log = Intento de inicio de sesi\u00F3n fallido - [Usuario: {0}] [IP:{1}].
exception.badCredentials.user = Usuario o contrase\u00F1a incorrecta.
exception.usernameNotFound.log = UserNameNotFoundException: [Usuario {0} inexistente o dado de baja.]
exception.usernameNotFound.user = Usuario inexistente.
exception.resourceNotFoundException.user = No se encontr\u00F3 el ID: {0}
exception.blockAccount.log = Cuenta Bloqueada: [ID USER:{0} - [USERNAME:{1}].
exception.blockAccount.user = Su cuenta se encuentra bloqueada. Por favor, restablezca la password para ingresar.
exception.roleNotFound.user = Error al intentar asignar rol.
exception.roleNotFound.log = Error al intentar asignar rol no v\u00E1lido: [ID: {0}] - [Rol: {1}].


#UserSecDTO
userSecDTO.username.empty = El username no puede estar vac\u00EDo.
userSecDTO.username.email = El username debe ser un correo v\u00E1lido.
userSecDTO.password.empty = La password no puede estar vac\u00EDa.
userSecDTO.password.min = La password debe contener al menor 10 car\u00E1cteres.
userSecDTO.password.pattern = La password debe contener al menos un car\u00E1cter especial, una may\u00FAscula y un n\u00FAmero.
userSecDTO.password.role = El usuario debe asignarse al menos 1 Rol.

#Config
config.getMessage.ok = Listado de configuraciones correcto.
config.updateMessage.ok = Actualizaci\u00F3n correcta.
config.getAttempts.ok = Registro recuperado.
config.updateAttempts.ok = Se actualizaron los intentos de sessi\u00F3n a: {0}.
config.getExpirationToken.ok = Registro recuperado.
config.updateExpirationToken.ok = Se actualiz\u00F3 el tiempo de expiraci\u00F3n del token a :{0} minutos.